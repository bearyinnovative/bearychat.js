#!/bin/env node

const async = require('async');
const yaml = require('js-yaml');
const fs = require('fs');
const join = require('path').join;

const apiFilePath = join(__dirname, '..', 'src', 'api.swagger.yml');
const apiSchema = yaml.safeLoad(fs.readFileSync(apiFilePath));
const apiVersion = apiSchema.info.version;
const basePath = `https://${apiSchema.host}${apiSchema.basePath}`;

async.forEachOf(apiSchema.paths, (decl, path, callback) => {
  const methodSourceName = `${path.replace(/^\//, '')}.js`;
  const methodName = path
    .replace(/^\//, '')
    .replace(/[_\.][a-z]/g, (x) => x.toUpperCase())
    .replace(/[_\.]/g, '');

  const requestMethod = Object.keys(decl)[0].toUpperCase();

  let apiMethod;
  if (requestMethod.toUpperCase() === 'GET') {
    apiMethod = `
// Generated by ./scripts/generate-api with OpenAPI@${apiVersion}
// for full api documentation, visit https://github.com/bearyinnovative/OpenAPI
import qs from 'querystring';
import fetch from 'isomorphic-fetch';
import { getBasePath } from './api';
import { validate } from './_validate';

export default function ${methodName}(payload) {
  return new Promise((resolve, reject) => {
    const err = validate('${requestMethod}', '${path}', payload);
    if (err) {
      reject(err);
      return;
    }

    const opts = {
      headers: { Accept: 'application/json' },
      method: '${requestMethod}',
    };

    /* eslint-disable */
    const api = getBasePath('${basePath}') + '${path}?' + qs.stringify(payload);
    /* eslint-enable */
    fetch(api, opts).then(resolve).catch(reject);
  });
}`;
  } else {
    apiMethod = `
// Generated by ./scripts/generate-api with OpenAPI@${apiVersion}
// for full api documentation, visit https://github.com/bearyinnovative/OpenAPI
import fetch from 'isomorphic-fetch';
import { getBasePath } from './api';
import { validate } from './_validate';

export default function ${methodName}(payload) {
  return new Promise((resolve, reject) => {
    const err = validate('${requestMethod}', '${path}', payload);
    if (err) {
      reject(err);
      return;
    }

    const opts = {
      headers: {
        Accept: 'application/json',
        'Content-Type': 'application/json',
      },
      method: '${requestMethod}',
      body: JSON.stringify(payload),
    };

    /* eslint-disable */
    const api = getBasePath('${basePath}') + '${path}';
    /* eslint-enable */
    fetch(api, opts).then(resolve).catch(reject);
  });
}`;
  }

  const file = join(__dirname, '..', 'src', methodSourceName);
  fs.writeFileSync(file, apiMethod.trim() + '\n');
  console.log(`generated ${file}`);
});
