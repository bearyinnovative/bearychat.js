#!/bin/env node

const async = require('async');
const yaml = require('js-yaml');
const fs = require('fs');
const join = require('path').join;

const apiFilePath = join(__dirname, '..', 'src', 'api.swagger.yml');
const apiSchema = yaml.safeLoad(fs.readFileSync(apiFilePath));
const apiVersion = apiSchema.info.version;
const basePath = `https://${apiSchema.host}${apiSchema.basePath}`;

async.forEachOf(apiSchema.paths, (decl, path, callback) => {
  const methodSourceName = `${path.replace(/^\//, '')}.js`;
  const methodName = path
    .replace(/^\//, '')
    .replace(/[_\.][a-z]/g, (x) => x.toUpperCase())
    .replace(/[_\.]/g, '');

  const requestMethod = Object.keys(decl)[0].toUpperCase();

  // FIXME(hbc) a little bit stupid, but work for now
  const optsBuilder = [];
  if (requestMethod === 'GET') {
    optsBuilder.push('opts.query = payload;');
  } else {
    optsBuilder.push(`opts.headers['Content-Type'] = 'application/json';`);
    optsBuilder.push(`opts.body = JSON.stringify(payload);`);
  }
  const opts = optsBuilder
    .map((x) => `    ${x}`)  // insert indention
    .join('\n');

  const apiMethod = `
// Generated by ./scripts/generate-api with OpenAPI@${apiVersion}
// for full api documentation, visit https://github.com/bearyinnovative/OpenAPI
import fetch from 'isomorphic-fetch';
import { getBasePath } from './api';
import { validate } from './_validate';

export default function ${methodName}(payload) {
  return new Promise((resolve, reject) => {
    const err = validate('${path}', payload);
    if (err) {
      return reject(err);
    }

    const opts = {
      headers: {'Accept': 'application/json'},
      method: '${requestMethod}',
    };
${opts}

    const api = getBasePath('${basePath}') + '${path}';
    return fetch(api, opts);
  });
}`;

  const file = join(__dirname, '..', 'src', methodSourceName);
  fs.writeFileSync(file, apiMethod.trim());
  console.log(`generated ${file}`);
});
